package net.intelie.challenges;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThrows;

import org.junit.Test;

public class EventTest {

	EventServices services = new EventServices();

	EventIteratorService eventIterator = new EventIteratorService(services.findAll());

	@Test
	public void insertShouldInsertNewEventInEventStore() throws Exception {
		insertEvents();
		assertEquals(5, services.findAll().size());
	}

	@Test
	public void removeAllShouldRemoveAllEventsOfType() {
		insertEvents();

		assertEquals(5, services.findAll().size());

		services.removeAll("Party");
		assertEquals(3, services.findAll().size());
	}

	@Test
	public void queryShouldReturnEventsByTypeAndTimestamp() {
		insertEvents();
		EventIterator iterator = services.query("Soccer game", 1L, 5L);

		assertEquals(true, iterator.moveNext());

		assertEquals("Soccer Game", iterator.current().type());

		iterator.remove();
		assertThrows(IllegalStateException.class, () -> {
			iterator.current();
		});

		assertEquals(false, iterator.moveNext());

	}

	public void insertEvents() {

		Event event = new Event("Party", 1L);
		Event event2 = new Event("Soccer Game", 2L);
		Event event3 = new Event("Basketball Game", 3L);
		Event event4 = new Event("PARTY", 4L);
		Event event5 = new Event("Show", 5L);

		services.insert(event);
		services.insert(event2);
		services.insert(event3);
		services.insert(event4);
		services.insert(event5);

	}

}