package net.intelie.challenges;

import java.util.List;
import java.util.ListIterator;
import java.util.concurrent.atomic.AtomicInteger;

public class EventIteratorService implements EventIterator {

	ListIterator<Event> eventsIterator;

	public int size = 0;

	public EventIteratorService(List<Event> eventsIterator) {
		this.eventsIterator = eventsIterator.listIterator();
	}

	@Override
	public void close() throws Exception {

	}

	@Override
	public boolean moveNext() {
		return this.eventsIterator.hasNext();
	}

	@Override
	public Event current() {
		return this.eventsIterator.next();
	}

	@Override
	public void remove() {
		this.eventsIterator.remove();
	}

	public void getSize() {

	}

	public int getIteratorSize() {
		this.eventsIterator.forEachRemaining(x -> {
			int count = 0;
			count = count + 1;
			return count;

		});
	}

}
