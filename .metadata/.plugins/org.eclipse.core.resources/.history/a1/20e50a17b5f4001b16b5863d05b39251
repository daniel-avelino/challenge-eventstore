package net.intelie.challenges;

import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class EventTest {

	EventServices services = new EventServices();
	EventIteratorService eventIterator = new EventIteratorService(services.findAll());

	Event event = new Event("some_type", 123L);
	Event event2 = new Event("some_type2", 1234L);

	@Test
	public void thisIsAWarning() throws Exception {
		Event event = new Event("some_type", 123L);

		// THIS IS A WARNING:
		// Some of us (not everyone) are coverage freaks.
		assertEquals(123L, event.timestamp());
		assertEquals("some_type", event.type());
	}

	@Test
	public void insertShouldInsertNewEventInEventStore() throws Exception {
		services.insert(event);
		assertEquals(1, services.findAll().size());
	}

	@Test
	public void removeAllShouldRemoveAllEventsOfType() {
		services.insert(event);
		services.insert(event);
		services.insert(event2);

		assertEquals(3, services.findAll().size());

		services.removeAll("some_type");
		assertEquals(1, services.findAll().size());
	}

	@Test
	public void queryShouldReturnEventsByTypeAndTimestamp() {
		services.insert(event);
		services.insert(event);

		EventIterator iterator = services.query("some_type", 123L, 1234L);

		assertEquals(true, iterator.moveNext());
		assertEquals("some_type", iterator.current().type());
		iterator.remove();
		assertEquals(1, services.iteratorSize);

	}
}